{
  "name": "progress",
  "dependencies": [
    "@radix-ui/react-progress"
  ],
  "files": [
    {
      "name": "progress.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-primary/20\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"
    },
    {
      "name": "progress.stories.tsx",
      "content": "import { useEffect, useState } from \"react\"\nimport { Meta, StoryObj } from \"@storybook/react\"\n\nimport { Progress } from \"@/registry/default/ui/progress\"\n\nconst meta: Meta<typeof Progress> = {\n  title: \"ui/Progress\",\n  component: Progress,\n  tags: [\"autodocs\"],\n  argTypes: {},\n}\nexport default meta\n\ntype Story = StoryObj<typeof Progress>\n\nexport const Base: Story = {\n  render: (args) => <Progress {...args} />,\n  args: {\n    value: 30,\n  },\n}\nexport const Animated: Story = {\n  render: (args) => <ProgressDemo {...args} />,\n  args: {\n    value: 13,\n  },\n}\n\nconst ProgressDemo = (args: Story[\"args\"]) => {\n  const [progress, setProgress] = useState(args?.value)\n\n  useEffect(() => {\n    const timer = setTimeout(() => setProgress(66), 500)\n    return () => clearTimeout(timer)\n  }, [])\n\n  return <Progress {...args} value={progress} className=\"w-[60%]\" />\n}\n"
    }
  ],
  "type": "components:ui"
}